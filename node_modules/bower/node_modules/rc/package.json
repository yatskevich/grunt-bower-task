{
  "name": "rc",
  "version": "0.0.8",
  "description": "hardwired configuration loader",
  "main": "index.js",
  "browserify": "browser.js",
  "scripts": {
    "test": "node test.js"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/dominictarr/rc.git"
  },
  "keywords": [
    "config",
    "rc",
    "unix",
    "defaults"
  ],
  "author": {
    "name": "Dominic Tarr",
    "email": "dominic.tarr@gmail.com",
    "url": "dominictarr.com"
  },
  "license": "BSD",
  "dependencies": {
    "config-chain": "~0.3",
    "optimist": "~0.3.4"
  },
  "readme": "# rc\n\nthe non configurable configuration loader for lazy people.\n\n# Usage\n\nthe only option is to pass rc the name of your app, and your default configuration.\n\n```\n  var rc = require('rc')(appname, {\n    //defaults go here.\n    port: 2468\n  })\n```\n\n# Standards\n\nGiven your application name, rc will look in all the obvious places for configuration.\n\n\n  * command line arguments (parsed by optimist)\n  * enviroment variables prefixed with ${APPNAME}_\n  * if you passed an option `--config file` then from that file\n  * `$HOME/.${APPNAME}rc`\n  * `$HOME/.${APPNAME}/config`\n  * `$HOME/.config/${APPNAME}`\n  * `$HOME/.config/${APPNAME}/config`\n  * `/etc/${APPNAME}rc`\n  * `/etc/${APPNAME}/config`\n  * the defaults object you passed in.\n\nAll configuration sources that where found will be flattened into one object,\nso that sources earlier in this list override later ones.\n\n# Formats\n\nConfiguration files may be in either `json` or `ini` format.\nSince ini, and env variables do not have a standard for types,\nyour application needs be prepared for strings.\n\n# License\n\nBSD\n",
  "readmeFilename": "README.md",
  "_id": "rc@0.0.8",
  "_from": "rc@~0.0.6"
}
